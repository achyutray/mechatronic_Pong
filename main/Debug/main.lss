
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c0  00800100  00000cda  00000d6e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cda  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001c0  008001c0  00000e2e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000144a  00000000  00000000  00001000  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c08  00000000  00000000  0000244a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008b3  00000000  00000000  00003052  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000230  00000000  00000000  00003908  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b0  00000000  00000000  00003b38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000700  00000000  00000000  000040e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  000047e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ea ed       	ldi	r30, 0xDA	; 218
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 3c       	cpi	r26, 0xC0	; 192
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 ec       	ldi	r26, 0xC0	; 192
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 3c       	cpi	r26, 0xCA	; 202
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 07 01 	call	0x20e	; 0x20e <main>
  a6:	0c 94 6b 06 	jmp	0xcd6	; 0xcd6 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_init>:

volatile char *adc_config_reg = (char *) ADC_Address;

void adc_init()
{
		DDRD	|=	(1<<PD4);
  ae:	8c 9a       	sbi	0x11, 4	; 17
  b0:	08 95       	ret

000000b2 <OLED_write_data>:
}

void OLED_write_data(uint8_t data)
{
	volatile char *OLED_data = (char *) 0x1200;
	OLED_data[0] = data;
  b2:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x1036>
  b6:	08 95       	ret

000000b8 <OLED_init>:


 void OLED_write_command(uint8_t command)
{
	volatile char *OLED_command = (char *) 0x1000;
	OLED_command[0] = command;
  b8:	e0 e0       	ldi	r30, 0x00	; 0
  ba:	f0 e1       	ldi	r31, 0x10	; 16
  bc:	8e ea       	ldi	r24, 0xAE	; 174
  be:	80 83       	st	Z, r24
  c0:	81 ea       	ldi	r24, 0xA1	; 161
  c2:	80 83       	st	Z, r24
  c4:	8a ed       	ldi	r24, 0xDA	; 218
  c6:	80 83       	st	Z, r24
  c8:	82 e1       	ldi	r24, 0x12	; 18
  ca:	80 83       	st	Z, r24
  cc:	88 ec       	ldi	r24, 0xC8	; 200
  ce:	80 83       	st	Z, r24
  d0:	88 ea       	ldi	r24, 0xA8	; 168
  d2:	80 83       	st	Z, r24
  d4:	8f e3       	ldi	r24, 0x3F	; 63
  d6:	80 83       	st	Z, r24
  d8:	85 ed       	ldi	r24, 0xD5	; 213
  da:	80 83       	st	Z, r24
  dc:	80 e8       	ldi	r24, 0x80	; 128
  de:	80 83       	st	Z, r24
  e0:	81 e8       	ldi	r24, 0x81	; 129
  e2:	80 83       	st	Z, r24
  e4:	80 e5       	ldi	r24, 0x50	; 80
  e6:	80 83       	st	Z, r24
  e8:	89 ed       	ldi	r24, 0xD9	; 217
  ea:	80 83       	st	Z, r24
  ec:	81 e2       	ldi	r24, 0x21	; 33
  ee:	80 83       	st	Z, r24
  f0:	80 e2       	ldi	r24, 0x20	; 32
  f2:	80 83       	st	Z, r24
  f4:	82 e0       	ldi	r24, 0x02	; 2
  f6:	80 83       	st	Z, r24
  f8:	8b ed       	ldi	r24, 0xDB	; 219
  fa:	80 83       	st	Z, r24
  fc:	80 e3       	ldi	r24, 0x30	; 48
  fe:	80 83       	st	Z, r24
 100:	8d ea       	ldi	r24, 0xAD	; 173
 102:	80 83       	st	Z, r24
 104:	10 82       	st	Z, r1
 106:	84 ea       	ldi	r24, 0xA4	; 164
 108:	80 83       	st	Z, r24
 10a:	86 ea       	ldi	r24, 0xA6	; 166
 10c:	80 83       	st	Z, r24
 10e:	8f ea       	ldi	r24, 0xAF	; 175
 110:	80 83       	st	Z, r24
 112:	08 95       	ret

00000114 <SRAM_test>:
#include <util/delay.h>
#include "SRAM.h"
#include "xmem.h"

void SRAM_test(void)
{
 114:	bf 92       	push	r11
 116:	cf 92       	push	r12
 118:	df 92       	push	r13
 11a:	ef 92       	push	r14
 11c:	ff 92       	push	r15
 11e:	0f 93       	push	r16
 120:	1f 93       	push	r17
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
	// volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n\n\n\n\n\n\n\n\n\n\r");
 126:	8a e0       	ldi	r24, 0x0A	; 10
 128:	91 e0       	ldi	r25, 0x01	; 1
 12a:	9f 93       	push	r25
 12c:	8f 93       	push	r24
 12e:	0e 94 f5 01 	call	0x3ea	; 0x3ea <printf>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
 132:	0e 94 9a 01 	call	0x334	; 0x334 <rand>
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
 136:	0e 94 9f 01 	call	0x33e	; 0x33e <srand>
 13a:	0f 90       	pop	r0
 13c:	0f 90       	pop	r0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 13e:	c0 e0       	ldi	r28, 0x00	; 0
 140:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	// volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
 142:	e1 2c       	mov	r14, r1
 144:	f1 2c       	mov	r15, r1
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		xmem_write(some_value, i);
		uint8_t returned_value = xmem_read(i);
		if (returned_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n\r", i, returned_value, some_value);
 146:	0f 2e       	mov	r0, r31
 148:	fb e2       	ldi	r31, 0x2B	; 43
 14a:	cf 2e       	mov	r12, r31
 14c:	f1 e0       	ldi	r31, 0x01	; 1
 14e:	df 2e       	mov	r13, r31
 150:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 152:	0e 94 9a 01 	call	0x334	; 0x334 <rand>
 156:	8c 01       	movw	r16, r24
		xmem_write(some_value, i);
 158:	be 01       	movw	r22, r28
 15a:	0e 94 ff 00 	call	0x1fe	; 0x1fe <xmem_write>
		uint8_t returned_value = xmem_read(i);
 15e:	ce 01       	movw	r24, r28
 160:	0e 94 03 01 	call	0x206	; 0x206 <xmem_read>
		if (returned_value != some_value) {
 164:	08 17       	cp	r16, r24
 166:	b1 f0       	breq	.+44     	; 0x194 <SRAM_test+0x80>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n\r", i, returned_value, some_value);
 168:	11 27       	eor	r17, r17
 16a:	1f 93       	push	r17
 16c:	0f 93       	push	r16
 16e:	1f 92       	push	r1
 170:	8f 93       	push	r24
 172:	df 93       	push	r29
 174:	cf 93       	push	r28
 176:	df 92       	push	r13
 178:	cf 92       	push	r12
 17a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <printf>
			write_errors++;
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	e8 1a       	sub	r14, r24
 182:	f8 0a       	sbc	r15, r24
 184:	8d b7       	in	r24, 0x3d	; 61
 186:	9e b7       	in	r25, 0x3e	; 62
 188:	08 96       	adiw	r24, 0x08	; 8
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	f8 94       	cli
 18e:	9e bf       	out	0x3e, r25	; 62
 190:	0f be       	out	0x3f, r0	; 63
 192:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 194:	21 96       	adiw	r28, 0x01	; 1
 196:	c1 15       	cp	r28, r1
 198:	98 e0       	ldi	r25, 0x08	; 8
 19a:	d9 07       	cpc	r29, r25
 19c:	d1 f6       	brne	.-76     	; 0x152 <SRAM_test+0x3e>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n\r", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}*/
	printf("SRAM test completed with \n\r%4d errors in write phase and \n\r%4d errors in retrieval phase\n\r", write_errors, retrieval_errors);
 19e:	1f 92       	push	r1
 1a0:	1f 92       	push	r1
 1a2:	ff 92       	push	r15
 1a4:	ef 92       	push	r14
 1a6:	85 e6       	ldi	r24, 0x65	; 101
 1a8:	91 e0       	ldi	r25, 0x01	; 1
 1aa:	9f 93       	push	r25
 1ac:	8f 93       	push	r24
 1ae:	0e 94 f5 01 	call	0x3ea	; 0x3ea <printf>
}
 1b2:	0f 90       	pop	r0
 1b4:	0f 90       	pop	r0
 1b6:	0f 90       	pop	r0
 1b8:	0f 90       	pop	r0
 1ba:	0f 90       	pop	r0
 1bc:	0f 90       	pop	r0
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	ff 90       	pop	r15
 1c8:	ef 90       	pop	r14
 1ca:	df 90       	pop	r13
 1cc:	cf 90       	pop	r12
 1ce:	bf 90       	pop	r11
 1d0:	08 95       	ret

000001d2 <timer_init>:
#include <stdio.h>


void timer_init(){

	TCCR3A	|=	(1<<WGM32)|(1<<COM3A0);							//Setting 1 in WaveformGenerationMode to enable CTC (Clear Timer on Compare match)
 1d2:	eb e8       	ldi	r30, 0x8B	; 139
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	80 81       	ld	r24, Z
 1d8:	88 64       	ori	r24, 0x48	; 72
 1da:	80 83       	st	Z, r24
	TCCR3B	|=	(1<<WGM32)|(1<<CS30);							//Selecting no pre-scaling of the clock
 1dc:	ea e8       	ldi	r30, 0x8A	; 138
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	89 60       	ori	r24, 0x09	; 9
 1e4:	80 83       	st	Z, r24
	OCR3A = 0b00000000;
 1e6:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1ea:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 1ee:	08 95       	ret

000001f0 <xmem_Init>:
#include <stdlib.h>
#include <stdio.h>


void xmem_Init(void){
	MCUCR|= (1<<SRE);
 1f0:	85 b7       	in	r24, 0x35	; 53
 1f2:	80 68       	ori	r24, 0x80	; 128
 1f4:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2);
 1f6:	80 b7       	in	r24, 0x30	; 48
 1f8:	80 62       	ori	r24, 0x20	; 32
 1fa:	80 bf       	out	0x30, r24	; 48
 1fc:	08 95       	ret

000001fe <xmem_write>:
}

void xmem_write(uint8_t data, uint16_t addr){
	volatile char *ext_mem = (char *) BASE_ADDRESS;
	ext_mem[addr] = data;
 1fe:	fb 01       	movw	r30, r22
 200:	f8 5e       	subi	r31, 0xE8	; 232
 202:	80 83       	st	Z, r24
 204:	08 95       	ret

00000206 <xmem_read>:
}

uint8_t xmem_read(uint16_t addr){
	volatile char *ext_mem = (char *) BASE_ADDRESS;
	uint8_t ret_val = ext_mem[addr];
 206:	98 5e       	subi	r25, 0xE8	; 232
 208:	fc 01       	movw	r30, r24
 20a:	80 81       	ld	r24, Z
	return ret_val;
 20c:	08 95       	ret

0000020e <main>:
const char *DirectionNames[] = { "IDLE", "UP", "DOWN", "LEFT", "R"};

int main(void)

{
	UART_init(UBRR_VALUE);
 20e:	8f e1       	ldi	r24, 0x1F	; 31
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	0e 94 32 01 	call	0x264	; 0x264 <UART_init>
	xmem_Init();
 216:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <xmem_Init>
	SRAM_test();
 21a:	0e 94 8a 00 	call	0x114	; 0x114 <SRAM_test>
	timer_init();
 21e:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <timer_init>
	adc_init();
 222:	0e 94 57 00 	call	0xae	; 0xae <adc_init>
	OLED_init();
 226:	0e 94 5c 00 	call	0xb8	; 0xb8 <OLED_init>

	//OLED_write_command(0xa5);
	
	OLED_write_data(0b00011000);
 22a:	88 e1       	ldi	r24, 0x18	; 24
 22c:	0e 94 59 00 	call	0xb2	; 0xb2 <OLED_write_data>
	OLED_write_data(0b00011000);
 230:	88 e1       	ldi	r24, 0x18	; 24
 232:	0e 94 59 00 	call	0xb2	; 0xb2 <OLED_write_data>
	OLED_write_data(0b01111110);
 236:	8e e7       	ldi	r24, 0x7E	; 126
 238:	0e 94 59 00 	call	0xb2	; 0xb2 <OLED_write_data>
	OLED_write_data(0b00111100);
 23c:	8c e3       	ldi	r24, 0x3C	; 60
 23e:	0e 94 59 00 	call	0xb2	; 0xb2 <OLED_write_data>
	OLED_write_data(0b00011000);
 242:	88 e1       	ldi	r24, 0x18	; 24
 244:	0e 94 59 00 	call	0xb2	; 0xb2 <OLED_write_data>

 248:	80 e0       	ldi	r24, 0x00	; 0
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	08 95       	ret

0000024e <UART_putchar>:




int  UART_putchar(char character, FILE *stream){
	while (!( UCSR0A & (1<<UDRE0))); 
 24e:	5d 9b       	sbis	0x0b, 5	; 11
 250:	fe cf       	rjmp	.-4      	; 0x24e <UART_putchar>
	UDR0 = character;
 252:	8c b9       	out	0x0c, r24	; 12
	return 0;
}
 254:	80 e0       	ldi	r24, 0x00	; 0
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	08 95       	ret

0000025a <UART_getchar>:


int UART_getchar(FILE *stream) { 
	while (!(UCSR0A & (1<<RXC0))); 
 25a:	5f 9b       	sbis	0x0b, 7	; 11
 25c:	fe cf       	rjmp	.-4      	; 0x25a <UART_getchar>
	unsigned char data = UDR0;
 25e:	8c b1       	in	r24, 0x0c	; 12
	return data;
 }
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	08 95       	ret

00000264 <UART_init>:

void UART_init (int baud_prescaler){
	UBRR0H = baud_prescaler >>8;
 264:	90 bd       	out	0x20, r25	; 32
	UBRR0L = baud_prescaler;
 266:	89 b9       	out	0x09, r24	; 9
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 268:	88 e1       	ldi	r24, 0x18	; 24
 26a:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1<<URSEL0)|(1<<UCSZ00)|(1<<UCSZ01);
 26c:	86 e8       	ldi	r24, 0x86	; 134
 26e:	80 bd       	out	0x20, r24	; 32
	fdevopen(*UART_putchar, *UART_getchar);
 270:	6d e2       	ldi	r22, 0x2D	; 45
 272:	71 e0       	ldi	r23, 0x01	; 1
 274:	87 e2       	ldi	r24, 0x27	; 39
 276:	91 e0       	ldi	r25, 0x01	; 1
 278:	0e 94 aa 01 	call	0x354	; 0x354 <fdevopen>
 27c:	08 95       	ret

0000027e <__umulhisi3>:
 27e:	a2 9f       	mul	r26, r18
 280:	b0 01       	movw	r22, r0
 282:	b3 9f       	mul	r27, r19
 284:	c0 01       	movw	r24, r0
 286:	a3 9f       	mul	r26, r19
 288:	70 0d       	add	r23, r0
 28a:	81 1d       	adc	r24, r1
 28c:	11 24       	eor	r1, r1
 28e:	91 1d       	adc	r25, r1
 290:	b2 9f       	mul	r27, r18
 292:	70 0d       	add	r23, r0
 294:	81 1d       	adc	r24, r1
 296:	11 24       	eor	r1, r1
 298:	91 1d       	adc	r25, r1
 29a:	08 95       	ret

0000029c <do_rand>:
 29c:	8f 92       	push	r8
 29e:	9f 92       	push	r9
 2a0:	af 92       	push	r10
 2a2:	bf 92       	push	r11
 2a4:	cf 92       	push	r12
 2a6:	df 92       	push	r13
 2a8:	ef 92       	push	r14
 2aa:	ff 92       	push	r15
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	ec 01       	movw	r28, r24
 2b2:	68 81       	ld	r22, Y
 2b4:	79 81       	ldd	r23, Y+1	; 0x01
 2b6:	8a 81       	ldd	r24, Y+2	; 0x02
 2b8:	9b 81       	ldd	r25, Y+3	; 0x03
 2ba:	61 15       	cp	r22, r1
 2bc:	71 05       	cpc	r23, r1
 2be:	81 05       	cpc	r24, r1
 2c0:	91 05       	cpc	r25, r1
 2c2:	21 f4       	brne	.+8      	; 0x2cc <do_rand+0x30>
 2c4:	64 e2       	ldi	r22, 0x24	; 36
 2c6:	79 ed       	ldi	r23, 0xD9	; 217
 2c8:	8b e5       	ldi	r24, 0x5B	; 91
 2ca:	97 e0       	ldi	r25, 0x07	; 7
 2cc:	2d e1       	ldi	r18, 0x1D	; 29
 2ce:	33 ef       	ldi	r19, 0xF3	; 243
 2d0:	41 e0       	ldi	r20, 0x01	; 1
 2d2:	50 e0       	ldi	r21, 0x00	; 0
 2d4:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <__divmodsi4>
 2d8:	49 01       	movw	r8, r18
 2da:	5a 01       	movw	r10, r20
 2dc:	9b 01       	movw	r18, r22
 2de:	ac 01       	movw	r20, r24
 2e0:	a7 ea       	ldi	r26, 0xA7	; 167
 2e2:	b1 e4       	ldi	r27, 0x41	; 65
 2e4:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__muluhisi3>
 2e8:	6b 01       	movw	r12, r22
 2ea:	7c 01       	movw	r14, r24
 2ec:	ac ee       	ldi	r26, 0xEC	; 236
 2ee:	b4 ef       	ldi	r27, 0xF4	; 244
 2f0:	a5 01       	movw	r20, r10
 2f2:	94 01       	movw	r18, r8
 2f4:	0e 94 0d 06 	call	0xc1a	; 0xc1a <__mulohisi3>
 2f8:	dc 01       	movw	r26, r24
 2fa:	cb 01       	movw	r24, r22
 2fc:	8c 0d       	add	r24, r12
 2fe:	9d 1d       	adc	r25, r13
 300:	ae 1d       	adc	r26, r14
 302:	bf 1d       	adc	r27, r15
 304:	b7 ff       	sbrs	r27, 7
 306:	03 c0       	rjmp	.+6      	; 0x30e <do_rand+0x72>
 308:	01 97       	sbiw	r24, 0x01	; 1
 30a:	a1 09       	sbc	r26, r1
 30c:	b0 48       	sbci	r27, 0x80	; 128
 30e:	88 83       	st	Y, r24
 310:	99 83       	std	Y+1, r25	; 0x01
 312:	aa 83       	std	Y+2, r26	; 0x02
 314:	bb 83       	std	Y+3, r27	; 0x03
 316:	9f 77       	andi	r25, 0x7F	; 127
 318:	df 91       	pop	r29
 31a:	cf 91       	pop	r28
 31c:	ff 90       	pop	r15
 31e:	ef 90       	pop	r14
 320:	df 90       	pop	r13
 322:	cf 90       	pop	r12
 324:	bf 90       	pop	r11
 326:	af 90       	pop	r10
 328:	9f 90       	pop	r9
 32a:	8f 90       	pop	r8
 32c:	08 95       	ret

0000032e <rand_r>:
 32e:	0e 94 4e 01 	call	0x29c	; 0x29c <do_rand>
 332:	08 95       	ret

00000334 <rand>:
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	91 e0       	ldi	r25, 0x01	; 1
 338:	0e 94 4e 01 	call	0x29c	; 0x29c <do_rand>
 33c:	08 95       	ret

0000033e <srand>:
 33e:	a0 e0       	ldi	r26, 0x00	; 0
 340:	b0 e0       	ldi	r27, 0x00	; 0
 342:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 346:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 34a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 34e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 352:	08 95       	ret

00000354 <fdevopen>:
 354:	0f 93       	push	r16
 356:	1f 93       	push	r17
 358:	cf 93       	push	r28
 35a:	df 93       	push	r29
 35c:	00 97       	sbiw	r24, 0x00	; 0
 35e:	31 f4       	brne	.+12     	; 0x36c <fdevopen+0x18>
 360:	61 15       	cp	r22, r1
 362:	71 05       	cpc	r23, r1
 364:	19 f4       	brne	.+6      	; 0x36c <fdevopen+0x18>
 366:	80 e0       	ldi	r24, 0x00	; 0
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	3a c0       	rjmp	.+116    	; 0x3e0 <fdevopen+0x8c>
 36c:	8b 01       	movw	r16, r22
 36e:	ec 01       	movw	r28, r24
 370:	6e e0       	ldi	r22, 0x0E	; 14
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <calloc>
 37c:	fc 01       	movw	r30, r24
 37e:	89 2b       	or	r24, r25
 380:	91 f3       	breq	.-28     	; 0x366 <fdevopen+0x12>
 382:	80 e8       	ldi	r24, 0x80	; 128
 384:	83 83       	std	Z+3, r24	; 0x03
 386:	01 15       	cp	r16, r1
 388:	11 05       	cpc	r17, r1
 38a:	71 f0       	breq	.+28     	; 0x3a8 <fdevopen+0x54>
 38c:	13 87       	std	Z+11, r17	; 0x0b
 38e:	02 87       	std	Z+10, r16	; 0x0a
 390:	81 e8       	ldi	r24, 0x81	; 129
 392:	83 83       	std	Z+3, r24	; 0x03
 394:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <__data_end>
 398:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <__data_end+0x1>
 39c:	89 2b       	or	r24, r25
 39e:	21 f4       	brne	.+8      	; 0x3a8 <fdevopen+0x54>
 3a0:	f0 93 c1 01 	sts	0x01C1, r31	; 0x8001c1 <__data_end+0x1>
 3a4:	e0 93 c0 01 	sts	0x01C0, r30	; 0x8001c0 <__data_end>
 3a8:	20 97       	sbiw	r28, 0x00	; 0
 3aa:	c9 f0       	breq	.+50     	; 0x3de <fdevopen+0x8a>
 3ac:	d1 87       	std	Z+9, r29	; 0x09
 3ae:	c0 87       	std	Z+8, r28	; 0x08
 3b0:	83 81       	ldd	r24, Z+3	; 0x03
 3b2:	82 60       	ori	r24, 0x02	; 2
 3b4:	83 83       	std	Z+3, r24	; 0x03
 3b6:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <__data_end+0x2>
 3ba:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <__data_end+0x3>
 3be:	89 2b       	or	r24, r25
 3c0:	71 f4       	brne	.+28     	; 0x3de <fdevopen+0x8a>
 3c2:	f0 93 c3 01 	sts	0x01C3, r31	; 0x8001c3 <__data_end+0x3>
 3c6:	e0 93 c2 01 	sts	0x01C2, r30	; 0x8001c2 <__data_end+0x2>
 3ca:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <__data_end+0x4>
 3ce:	90 91 c5 01 	lds	r25, 0x01C5	; 0x8001c5 <__data_end+0x5>
 3d2:	89 2b       	or	r24, r25
 3d4:	21 f4       	brne	.+8      	; 0x3de <fdevopen+0x8a>
 3d6:	f0 93 c5 01 	sts	0x01C5, r31	; 0x8001c5 <__data_end+0x5>
 3da:	e0 93 c4 01 	sts	0x01C4, r30	; 0x8001c4 <__data_end+0x4>
 3de:	cf 01       	movw	r24, r30
 3e0:	df 91       	pop	r29
 3e2:	cf 91       	pop	r28
 3e4:	1f 91       	pop	r17
 3e6:	0f 91       	pop	r16
 3e8:	08 95       	ret

000003ea <printf>:
 3ea:	a0 e0       	ldi	r26, 0x00	; 0
 3ec:	b0 e0       	ldi	r27, 0x00	; 0
 3ee:	eb ef       	ldi	r30, 0xFB	; 251
 3f0:	f1 e0       	ldi	r31, 0x01	; 1
 3f2:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__prologue_saves__+0x20>
 3f6:	ae 01       	movw	r20, r28
 3f8:	4b 5f       	subi	r20, 0xFB	; 251
 3fa:	5f 4f       	sbci	r21, 0xFF	; 255
 3fc:	fa 01       	movw	r30, r20
 3fe:	61 91       	ld	r22, Z+
 400:	71 91       	ld	r23, Z+
 402:	af 01       	movw	r20, r30
 404:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <__data_end+0x2>
 408:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <__data_end+0x3>
 40c:	0e 94 0b 02 	call	0x416	; 0x416 <vfprintf>
 410:	e2 e0       	ldi	r30, 0x02	; 2
 412:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <__epilogue_restores__+0x20>

00000416 <vfprintf>:
 416:	ab e0       	ldi	r26, 0x0B	; 11
 418:	b0 e0       	ldi	r27, 0x00	; 0
 41a:	e1 e1       	ldi	r30, 0x11	; 17
 41c:	f2 e0       	ldi	r31, 0x02	; 2
 41e:	0c 94 12 06 	jmp	0xc24	; 0xc24 <__prologue_saves__>
 422:	6c 01       	movw	r12, r24
 424:	7b 01       	movw	r14, r22
 426:	8a 01       	movw	r16, r20
 428:	fc 01       	movw	r30, r24
 42a:	17 82       	std	Z+7, r1	; 0x07
 42c:	16 82       	std	Z+6, r1	; 0x06
 42e:	83 81       	ldd	r24, Z+3	; 0x03
 430:	81 ff       	sbrs	r24, 1
 432:	cc c1       	rjmp	.+920    	; 0x7cc <__stack+0x2cd>
 434:	ce 01       	movw	r24, r28
 436:	01 96       	adiw	r24, 0x01	; 1
 438:	3c 01       	movw	r6, r24
 43a:	f6 01       	movw	r30, r12
 43c:	93 81       	ldd	r25, Z+3	; 0x03
 43e:	f7 01       	movw	r30, r14
 440:	93 fd       	sbrc	r25, 3
 442:	85 91       	lpm	r24, Z+
 444:	93 ff       	sbrs	r25, 3
 446:	81 91       	ld	r24, Z+
 448:	7f 01       	movw	r14, r30
 44a:	88 23       	and	r24, r24
 44c:	09 f4       	brne	.+2      	; 0x450 <vfprintf+0x3a>
 44e:	ba c1       	rjmp	.+884    	; 0x7c4 <__stack+0x2c5>
 450:	85 32       	cpi	r24, 0x25	; 37
 452:	39 f4       	brne	.+14     	; 0x462 <vfprintf+0x4c>
 454:	93 fd       	sbrc	r25, 3
 456:	85 91       	lpm	r24, Z+
 458:	93 ff       	sbrs	r25, 3
 45a:	81 91       	ld	r24, Z+
 45c:	7f 01       	movw	r14, r30
 45e:	85 32       	cpi	r24, 0x25	; 37
 460:	29 f4       	brne	.+10     	; 0x46c <vfprintf+0x56>
 462:	b6 01       	movw	r22, r12
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 46 05 	call	0xa8c	; 0xa8c <fputc>
 46a:	e7 cf       	rjmp	.-50     	; 0x43a <vfprintf+0x24>
 46c:	91 2c       	mov	r9, r1
 46e:	21 2c       	mov	r2, r1
 470:	31 2c       	mov	r3, r1
 472:	ff e1       	ldi	r31, 0x1F	; 31
 474:	f3 15       	cp	r31, r3
 476:	d8 f0       	brcs	.+54     	; 0x4ae <vfprintf+0x98>
 478:	8b 32       	cpi	r24, 0x2B	; 43
 47a:	79 f0       	breq	.+30     	; 0x49a <vfprintf+0x84>
 47c:	38 f4       	brcc	.+14     	; 0x48c <vfprintf+0x76>
 47e:	80 32       	cpi	r24, 0x20	; 32
 480:	79 f0       	breq	.+30     	; 0x4a0 <vfprintf+0x8a>
 482:	83 32       	cpi	r24, 0x23	; 35
 484:	a1 f4       	brne	.+40     	; 0x4ae <vfprintf+0x98>
 486:	23 2d       	mov	r18, r3
 488:	20 61       	ori	r18, 0x10	; 16
 48a:	1d c0       	rjmp	.+58     	; 0x4c6 <vfprintf+0xb0>
 48c:	8d 32       	cpi	r24, 0x2D	; 45
 48e:	61 f0       	breq	.+24     	; 0x4a8 <vfprintf+0x92>
 490:	80 33       	cpi	r24, 0x30	; 48
 492:	69 f4       	brne	.+26     	; 0x4ae <vfprintf+0x98>
 494:	23 2d       	mov	r18, r3
 496:	21 60       	ori	r18, 0x01	; 1
 498:	16 c0       	rjmp	.+44     	; 0x4c6 <vfprintf+0xb0>
 49a:	83 2d       	mov	r24, r3
 49c:	82 60       	ori	r24, 0x02	; 2
 49e:	38 2e       	mov	r3, r24
 4a0:	e3 2d       	mov	r30, r3
 4a2:	e4 60       	ori	r30, 0x04	; 4
 4a4:	3e 2e       	mov	r3, r30
 4a6:	2a c0       	rjmp	.+84     	; 0x4fc <vfprintf+0xe6>
 4a8:	f3 2d       	mov	r31, r3
 4aa:	f8 60       	ori	r31, 0x08	; 8
 4ac:	1d c0       	rjmp	.+58     	; 0x4e8 <vfprintf+0xd2>
 4ae:	37 fc       	sbrc	r3, 7
 4b0:	2d c0       	rjmp	.+90     	; 0x50c <__stack+0xd>
 4b2:	20 ed       	ldi	r18, 0xD0	; 208
 4b4:	28 0f       	add	r18, r24
 4b6:	2a 30       	cpi	r18, 0x0A	; 10
 4b8:	40 f0       	brcs	.+16     	; 0x4ca <vfprintf+0xb4>
 4ba:	8e 32       	cpi	r24, 0x2E	; 46
 4bc:	b9 f4       	brne	.+46     	; 0x4ec <vfprintf+0xd6>
 4be:	36 fc       	sbrc	r3, 6
 4c0:	81 c1       	rjmp	.+770    	; 0x7c4 <__stack+0x2c5>
 4c2:	23 2d       	mov	r18, r3
 4c4:	20 64       	ori	r18, 0x40	; 64
 4c6:	32 2e       	mov	r3, r18
 4c8:	19 c0       	rjmp	.+50     	; 0x4fc <vfprintf+0xe6>
 4ca:	36 fe       	sbrs	r3, 6
 4cc:	06 c0       	rjmp	.+12     	; 0x4da <vfprintf+0xc4>
 4ce:	8a e0       	ldi	r24, 0x0A	; 10
 4d0:	98 9e       	mul	r9, r24
 4d2:	20 0d       	add	r18, r0
 4d4:	11 24       	eor	r1, r1
 4d6:	92 2e       	mov	r9, r18
 4d8:	11 c0       	rjmp	.+34     	; 0x4fc <vfprintf+0xe6>
 4da:	ea e0       	ldi	r30, 0x0A	; 10
 4dc:	2e 9e       	mul	r2, r30
 4de:	20 0d       	add	r18, r0
 4e0:	11 24       	eor	r1, r1
 4e2:	22 2e       	mov	r2, r18
 4e4:	f3 2d       	mov	r31, r3
 4e6:	f0 62       	ori	r31, 0x20	; 32
 4e8:	3f 2e       	mov	r3, r31
 4ea:	08 c0       	rjmp	.+16     	; 0x4fc <vfprintf+0xe6>
 4ec:	8c 36       	cpi	r24, 0x6C	; 108
 4ee:	21 f4       	brne	.+8      	; 0x4f8 <vfprintf+0xe2>
 4f0:	83 2d       	mov	r24, r3
 4f2:	80 68       	ori	r24, 0x80	; 128
 4f4:	38 2e       	mov	r3, r24
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <vfprintf+0xe6>
 4f8:	88 36       	cpi	r24, 0x68	; 104
 4fa:	41 f4       	brne	.+16     	; 0x50c <__stack+0xd>
 4fc:	f7 01       	movw	r30, r14
 4fe:	93 fd       	sbrc	r25, 3
 500:	85 91       	lpm	r24, Z+
 502:	93 ff       	sbrs	r25, 3
 504:	81 91       	ld	r24, Z+
 506:	7f 01       	movw	r14, r30
 508:	81 11       	cpse	r24, r1
 50a:	b3 cf       	rjmp	.-154    	; 0x472 <vfprintf+0x5c>
 50c:	98 2f       	mov	r25, r24
 50e:	9f 7d       	andi	r25, 0xDF	; 223
 510:	95 54       	subi	r25, 0x45	; 69
 512:	93 30       	cpi	r25, 0x03	; 3
 514:	28 f4       	brcc	.+10     	; 0x520 <__stack+0x21>
 516:	0c 5f       	subi	r16, 0xFC	; 252
 518:	1f 4f       	sbci	r17, 0xFF	; 255
 51a:	9f e3       	ldi	r25, 0x3F	; 63
 51c:	99 83       	std	Y+1, r25	; 0x01
 51e:	0d c0       	rjmp	.+26     	; 0x53a <__stack+0x3b>
 520:	83 36       	cpi	r24, 0x63	; 99
 522:	31 f0       	breq	.+12     	; 0x530 <__stack+0x31>
 524:	83 37       	cpi	r24, 0x73	; 115
 526:	71 f0       	breq	.+28     	; 0x544 <__stack+0x45>
 528:	83 35       	cpi	r24, 0x53	; 83
 52a:	09 f0       	breq	.+2      	; 0x52e <__stack+0x2f>
 52c:	59 c0       	rjmp	.+178    	; 0x5e0 <__stack+0xe1>
 52e:	21 c0       	rjmp	.+66     	; 0x572 <__stack+0x73>
 530:	f8 01       	movw	r30, r16
 532:	80 81       	ld	r24, Z
 534:	89 83       	std	Y+1, r24	; 0x01
 536:	0e 5f       	subi	r16, 0xFE	; 254
 538:	1f 4f       	sbci	r17, 0xFF	; 255
 53a:	88 24       	eor	r8, r8
 53c:	83 94       	inc	r8
 53e:	91 2c       	mov	r9, r1
 540:	53 01       	movw	r10, r6
 542:	13 c0       	rjmp	.+38     	; 0x56a <__stack+0x6b>
 544:	28 01       	movw	r4, r16
 546:	f2 e0       	ldi	r31, 0x02	; 2
 548:	4f 0e       	add	r4, r31
 54a:	51 1c       	adc	r5, r1
 54c:	f8 01       	movw	r30, r16
 54e:	a0 80       	ld	r10, Z
 550:	b1 80       	ldd	r11, Z+1	; 0x01
 552:	36 fe       	sbrs	r3, 6
 554:	03 c0       	rjmp	.+6      	; 0x55c <__stack+0x5d>
 556:	69 2d       	mov	r22, r9
 558:	70 e0       	ldi	r23, 0x00	; 0
 55a:	02 c0       	rjmp	.+4      	; 0x560 <__stack+0x61>
 55c:	6f ef       	ldi	r22, 0xFF	; 255
 55e:	7f ef       	ldi	r23, 0xFF	; 255
 560:	c5 01       	movw	r24, r10
 562:	0e 94 3b 05 	call	0xa76	; 0xa76 <strnlen>
 566:	4c 01       	movw	r8, r24
 568:	82 01       	movw	r16, r4
 56a:	f3 2d       	mov	r31, r3
 56c:	ff 77       	andi	r31, 0x7F	; 127
 56e:	3f 2e       	mov	r3, r31
 570:	16 c0       	rjmp	.+44     	; 0x59e <__stack+0x9f>
 572:	28 01       	movw	r4, r16
 574:	22 e0       	ldi	r18, 0x02	; 2
 576:	42 0e       	add	r4, r18
 578:	51 1c       	adc	r5, r1
 57a:	f8 01       	movw	r30, r16
 57c:	a0 80       	ld	r10, Z
 57e:	b1 80       	ldd	r11, Z+1	; 0x01
 580:	36 fe       	sbrs	r3, 6
 582:	03 c0       	rjmp	.+6      	; 0x58a <__stack+0x8b>
 584:	69 2d       	mov	r22, r9
 586:	70 e0       	ldi	r23, 0x00	; 0
 588:	02 c0       	rjmp	.+4      	; 0x58e <__stack+0x8f>
 58a:	6f ef       	ldi	r22, 0xFF	; 255
 58c:	7f ef       	ldi	r23, 0xFF	; 255
 58e:	c5 01       	movw	r24, r10
 590:	0e 94 29 05 	call	0xa52	; 0xa52 <strnlen_P>
 594:	4c 01       	movw	r8, r24
 596:	f3 2d       	mov	r31, r3
 598:	f0 68       	ori	r31, 0x80	; 128
 59a:	3f 2e       	mov	r3, r31
 59c:	82 01       	movw	r16, r4
 59e:	33 fc       	sbrc	r3, 3
 5a0:	1b c0       	rjmp	.+54     	; 0x5d8 <__stack+0xd9>
 5a2:	82 2d       	mov	r24, r2
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	88 16       	cp	r8, r24
 5a8:	99 06       	cpc	r9, r25
 5aa:	b0 f4       	brcc	.+44     	; 0x5d8 <__stack+0xd9>
 5ac:	b6 01       	movw	r22, r12
 5ae:	80 e2       	ldi	r24, 0x20	; 32
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	0e 94 46 05 	call	0xa8c	; 0xa8c <fputc>
 5b6:	2a 94       	dec	r2
 5b8:	f4 cf       	rjmp	.-24     	; 0x5a2 <__stack+0xa3>
 5ba:	f5 01       	movw	r30, r10
 5bc:	37 fc       	sbrc	r3, 7
 5be:	85 91       	lpm	r24, Z+
 5c0:	37 fe       	sbrs	r3, 7
 5c2:	81 91       	ld	r24, Z+
 5c4:	5f 01       	movw	r10, r30
 5c6:	b6 01       	movw	r22, r12
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 46 05 	call	0xa8c	; 0xa8c <fputc>
 5ce:	21 10       	cpse	r2, r1
 5d0:	2a 94       	dec	r2
 5d2:	21 e0       	ldi	r18, 0x01	; 1
 5d4:	82 1a       	sub	r8, r18
 5d6:	91 08       	sbc	r9, r1
 5d8:	81 14       	cp	r8, r1
 5da:	91 04       	cpc	r9, r1
 5dc:	71 f7       	brne	.-36     	; 0x5ba <__stack+0xbb>
 5de:	e8 c0       	rjmp	.+464    	; 0x7b0 <__stack+0x2b1>
 5e0:	84 36       	cpi	r24, 0x64	; 100
 5e2:	11 f0       	breq	.+4      	; 0x5e8 <__stack+0xe9>
 5e4:	89 36       	cpi	r24, 0x69	; 105
 5e6:	41 f5       	brne	.+80     	; 0x638 <__stack+0x139>
 5e8:	f8 01       	movw	r30, r16
 5ea:	37 fe       	sbrs	r3, 7
 5ec:	07 c0       	rjmp	.+14     	; 0x5fc <__stack+0xfd>
 5ee:	60 81       	ld	r22, Z
 5f0:	71 81       	ldd	r23, Z+1	; 0x01
 5f2:	82 81       	ldd	r24, Z+2	; 0x02
 5f4:	93 81       	ldd	r25, Z+3	; 0x03
 5f6:	0c 5f       	subi	r16, 0xFC	; 252
 5f8:	1f 4f       	sbci	r17, 0xFF	; 255
 5fa:	08 c0       	rjmp	.+16     	; 0x60c <__stack+0x10d>
 5fc:	60 81       	ld	r22, Z
 5fe:	71 81       	ldd	r23, Z+1	; 0x01
 600:	07 2e       	mov	r0, r23
 602:	00 0c       	add	r0, r0
 604:	88 0b       	sbc	r24, r24
 606:	99 0b       	sbc	r25, r25
 608:	0e 5f       	subi	r16, 0xFE	; 254
 60a:	1f 4f       	sbci	r17, 0xFF	; 255
 60c:	f3 2d       	mov	r31, r3
 60e:	ff 76       	andi	r31, 0x6F	; 111
 610:	3f 2e       	mov	r3, r31
 612:	97 ff       	sbrs	r25, 7
 614:	09 c0       	rjmp	.+18     	; 0x628 <__stack+0x129>
 616:	90 95       	com	r25
 618:	80 95       	com	r24
 61a:	70 95       	com	r23
 61c:	61 95       	neg	r22
 61e:	7f 4f       	sbci	r23, 0xFF	; 255
 620:	8f 4f       	sbci	r24, 0xFF	; 255
 622:	9f 4f       	sbci	r25, 0xFF	; 255
 624:	f0 68       	ori	r31, 0x80	; 128
 626:	3f 2e       	mov	r3, r31
 628:	2a e0       	ldi	r18, 0x0A	; 10
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	a3 01       	movw	r20, r6
 62e:	0e 94 82 05 	call	0xb04	; 0xb04 <__ultoa_invert>
 632:	88 2e       	mov	r8, r24
 634:	86 18       	sub	r8, r6
 636:	45 c0       	rjmp	.+138    	; 0x6c2 <__stack+0x1c3>
 638:	85 37       	cpi	r24, 0x75	; 117
 63a:	31 f4       	brne	.+12     	; 0x648 <__stack+0x149>
 63c:	23 2d       	mov	r18, r3
 63e:	2f 7e       	andi	r18, 0xEF	; 239
 640:	b2 2e       	mov	r11, r18
 642:	2a e0       	ldi	r18, 0x0A	; 10
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	25 c0       	rjmp	.+74     	; 0x692 <__stack+0x193>
 648:	93 2d       	mov	r25, r3
 64a:	99 7f       	andi	r25, 0xF9	; 249
 64c:	b9 2e       	mov	r11, r25
 64e:	8f 36       	cpi	r24, 0x6F	; 111
 650:	c1 f0       	breq	.+48     	; 0x682 <__stack+0x183>
 652:	18 f4       	brcc	.+6      	; 0x65a <__stack+0x15b>
 654:	88 35       	cpi	r24, 0x58	; 88
 656:	79 f0       	breq	.+30     	; 0x676 <__stack+0x177>
 658:	b5 c0       	rjmp	.+362    	; 0x7c4 <__stack+0x2c5>
 65a:	80 37       	cpi	r24, 0x70	; 112
 65c:	19 f0       	breq	.+6      	; 0x664 <__stack+0x165>
 65e:	88 37       	cpi	r24, 0x78	; 120
 660:	21 f0       	breq	.+8      	; 0x66a <__stack+0x16b>
 662:	b0 c0       	rjmp	.+352    	; 0x7c4 <__stack+0x2c5>
 664:	e9 2f       	mov	r30, r25
 666:	e0 61       	ori	r30, 0x10	; 16
 668:	be 2e       	mov	r11, r30
 66a:	b4 fe       	sbrs	r11, 4
 66c:	0d c0       	rjmp	.+26     	; 0x688 <__stack+0x189>
 66e:	fb 2d       	mov	r31, r11
 670:	f4 60       	ori	r31, 0x04	; 4
 672:	bf 2e       	mov	r11, r31
 674:	09 c0       	rjmp	.+18     	; 0x688 <__stack+0x189>
 676:	34 fe       	sbrs	r3, 4
 678:	0a c0       	rjmp	.+20     	; 0x68e <__stack+0x18f>
 67a:	29 2f       	mov	r18, r25
 67c:	26 60       	ori	r18, 0x06	; 6
 67e:	b2 2e       	mov	r11, r18
 680:	06 c0       	rjmp	.+12     	; 0x68e <__stack+0x18f>
 682:	28 e0       	ldi	r18, 0x08	; 8
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	05 c0       	rjmp	.+10     	; 0x692 <__stack+0x193>
 688:	20 e1       	ldi	r18, 0x10	; 16
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	02 c0       	rjmp	.+4      	; 0x692 <__stack+0x193>
 68e:	20 e1       	ldi	r18, 0x10	; 16
 690:	32 e0       	ldi	r19, 0x02	; 2
 692:	f8 01       	movw	r30, r16
 694:	b7 fe       	sbrs	r11, 7
 696:	07 c0       	rjmp	.+14     	; 0x6a6 <__stack+0x1a7>
 698:	60 81       	ld	r22, Z
 69a:	71 81       	ldd	r23, Z+1	; 0x01
 69c:	82 81       	ldd	r24, Z+2	; 0x02
 69e:	93 81       	ldd	r25, Z+3	; 0x03
 6a0:	0c 5f       	subi	r16, 0xFC	; 252
 6a2:	1f 4f       	sbci	r17, 0xFF	; 255
 6a4:	06 c0       	rjmp	.+12     	; 0x6b2 <__stack+0x1b3>
 6a6:	60 81       	ld	r22, Z
 6a8:	71 81       	ldd	r23, Z+1	; 0x01
 6aa:	80 e0       	ldi	r24, 0x00	; 0
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	0e 5f       	subi	r16, 0xFE	; 254
 6b0:	1f 4f       	sbci	r17, 0xFF	; 255
 6b2:	a3 01       	movw	r20, r6
 6b4:	0e 94 82 05 	call	0xb04	; 0xb04 <__ultoa_invert>
 6b8:	88 2e       	mov	r8, r24
 6ba:	86 18       	sub	r8, r6
 6bc:	fb 2d       	mov	r31, r11
 6be:	ff 77       	andi	r31, 0x7F	; 127
 6c0:	3f 2e       	mov	r3, r31
 6c2:	36 fe       	sbrs	r3, 6
 6c4:	0d c0       	rjmp	.+26     	; 0x6e0 <__stack+0x1e1>
 6c6:	23 2d       	mov	r18, r3
 6c8:	2e 7f       	andi	r18, 0xFE	; 254
 6ca:	a2 2e       	mov	r10, r18
 6cc:	89 14       	cp	r8, r9
 6ce:	58 f4       	brcc	.+22     	; 0x6e6 <__stack+0x1e7>
 6d0:	34 fe       	sbrs	r3, 4
 6d2:	0b c0       	rjmp	.+22     	; 0x6ea <__stack+0x1eb>
 6d4:	32 fc       	sbrc	r3, 2
 6d6:	09 c0       	rjmp	.+18     	; 0x6ea <__stack+0x1eb>
 6d8:	83 2d       	mov	r24, r3
 6da:	8e 7e       	andi	r24, 0xEE	; 238
 6dc:	a8 2e       	mov	r10, r24
 6de:	05 c0       	rjmp	.+10     	; 0x6ea <__stack+0x1eb>
 6e0:	b8 2c       	mov	r11, r8
 6e2:	a3 2c       	mov	r10, r3
 6e4:	03 c0       	rjmp	.+6      	; 0x6ec <__stack+0x1ed>
 6e6:	b8 2c       	mov	r11, r8
 6e8:	01 c0       	rjmp	.+2      	; 0x6ec <__stack+0x1ed>
 6ea:	b9 2c       	mov	r11, r9
 6ec:	a4 fe       	sbrs	r10, 4
 6ee:	0f c0       	rjmp	.+30     	; 0x70e <__stack+0x20f>
 6f0:	fe 01       	movw	r30, r28
 6f2:	e8 0d       	add	r30, r8
 6f4:	f1 1d       	adc	r31, r1
 6f6:	80 81       	ld	r24, Z
 6f8:	80 33       	cpi	r24, 0x30	; 48
 6fa:	21 f4       	brne	.+8      	; 0x704 <__stack+0x205>
 6fc:	9a 2d       	mov	r25, r10
 6fe:	99 7e       	andi	r25, 0xE9	; 233
 700:	a9 2e       	mov	r10, r25
 702:	09 c0       	rjmp	.+18     	; 0x716 <__stack+0x217>
 704:	a2 fe       	sbrs	r10, 2
 706:	06 c0       	rjmp	.+12     	; 0x714 <__stack+0x215>
 708:	b3 94       	inc	r11
 70a:	b3 94       	inc	r11
 70c:	04 c0       	rjmp	.+8      	; 0x716 <__stack+0x217>
 70e:	8a 2d       	mov	r24, r10
 710:	86 78       	andi	r24, 0x86	; 134
 712:	09 f0       	breq	.+2      	; 0x716 <__stack+0x217>
 714:	b3 94       	inc	r11
 716:	a3 fc       	sbrc	r10, 3
 718:	11 c0       	rjmp	.+34     	; 0x73c <__stack+0x23d>
 71a:	a0 fe       	sbrs	r10, 0
 71c:	06 c0       	rjmp	.+12     	; 0x72a <__stack+0x22b>
 71e:	b2 14       	cp	r11, r2
 720:	88 f4       	brcc	.+34     	; 0x744 <__stack+0x245>
 722:	28 0c       	add	r2, r8
 724:	92 2c       	mov	r9, r2
 726:	9b 18       	sub	r9, r11
 728:	0e c0       	rjmp	.+28     	; 0x746 <__stack+0x247>
 72a:	b2 14       	cp	r11, r2
 72c:	60 f4       	brcc	.+24     	; 0x746 <__stack+0x247>
 72e:	b6 01       	movw	r22, r12
 730:	80 e2       	ldi	r24, 0x20	; 32
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0e 94 46 05 	call	0xa8c	; 0xa8c <fputc>
 738:	b3 94       	inc	r11
 73a:	f7 cf       	rjmp	.-18     	; 0x72a <__stack+0x22b>
 73c:	b2 14       	cp	r11, r2
 73e:	18 f4       	brcc	.+6      	; 0x746 <__stack+0x247>
 740:	2b 18       	sub	r2, r11
 742:	02 c0       	rjmp	.+4      	; 0x748 <__stack+0x249>
 744:	98 2c       	mov	r9, r8
 746:	21 2c       	mov	r2, r1
 748:	a4 fe       	sbrs	r10, 4
 74a:	10 c0       	rjmp	.+32     	; 0x76c <__stack+0x26d>
 74c:	b6 01       	movw	r22, r12
 74e:	80 e3       	ldi	r24, 0x30	; 48
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	0e 94 46 05 	call	0xa8c	; 0xa8c <fputc>
 756:	a2 fe       	sbrs	r10, 2
 758:	17 c0       	rjmp	.+46     	; 0x788 <__stack+0x289>
 75a:	a1 fc       	sbrc	r10, 1
 75c:	03 c0       	rjmp	.+6      	; 0x764 <__stack+0x265>
 75e:	88 e7       	ldi	r24, 0x78	; 120
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	02 c0       	rjmp	.+4      	; 0x768 <__stack+0x269>
 764:	88 e5       	ldi	r24, 0x58	; 88
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	b6 01       	movw	r22, r12
 76a:	0c c0       	rjmp	.+24     	; 0x784 <__stack+0x285>
 76c:	8a 2d       	mov	r24, r10
 76e:	86 78       	andi	r24, 0x86	; 134
 770:	59 f0       	breq	.+22     	; 0x788 <__stack+0x289>
 772:	a1 fe       	sbrs	r10, 1
 774:	02 c0       	rjmp	.+4      	; 0x77a <__stack+0x27b>
 776:	8b e2       	ldi	r24, 0x2B	; 43
 778:	01 c0       	rjmp	.+2      	; 0x77c <__stack+0x27d>
 77a:	80 e2       	ldi	r24, 0x20	; 32
 77c:	a7 fc       	sbrc	r10, 7
 77e:	8d e2       	ldi	r24, 0x2D	; 45
 780:	b6 01       	movw	r22, r12
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	0e 94 46 05 	call	0xa8c	; 0xa8c <fputc>
 788:	89 14       	cp	r8, r9
 78a:	38 f4       	brcc	.+14     	; 0x79a <__stack+0x29b>
 78c:	b6 01       	movw	r22, r12
 78e:	80 e3       	ldi	r24, 0x30	; 48
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	0e 94 46 05 	call	0xa8c	; 0xa8c <fputc>
 796:	9a 94       	dec	r9
 798:	f7 cf       	rjmp	.-18     	; 0x788 <__stack+0x289>
 79a:	8a 94       	dec	r8
 79c:	f3 01       	movw	r30, r6
 79e:	e8 0d       	add	r30, r8
 7a0:	f1 1d       	adc	r31, r1
 7a2:	80 81       	ld	r24, Z
 7a4:	b6 01       	movw	r22, r12
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	0e 94 46 05 	call	0xa8c	; 0xa8c <fputc>
 7ac:	81 10       	cpse	r8, r1
 7ae:	f5 cf       	rjmp	.-22     	; 0x79a <__stack+0x29b>
 7b0:	22 20       	and	r2, r2
 7b2:	09 f4       	brne	.+2      	; 0x7b6 <__stack+0x2b7>
 7b4:	42 ce       	rjmp	.-892    	; 0x43a <vfprintf+0x24>
 7b6:	b6 01       	movw	r22, r12
 7b8:	80 e2       	ldi	r24, 0x20	; 32
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	0e 94 46 05 	call	0xa8c	; 0xa8c <fputc>
 7c0:	2a 94       	dec	r2
 7c2:	f6 cf       	rjmp	.-20     	; 0x7b0 <__stack+0x2b1>
 7c4:	f6 01       	movw	r30, r12
 7c6:	86 81       	ldd	r24, Z+6	; 0x06
 7c8:	97 81       	ldd	r25, Z+7	; 0x07
 7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <__stack+0x2d1>
 7cc:	8f ef       	ldi	r24, 0xFF	; 255
 7ce:	9f ef       	ldi	r25, 0xFF	; 255
 7d0:	2b 96       	adiw	r28, 0x0b	; 11
 7d2:	e2 e1       	ldi	r30, 0x12	; 18
 7d4:	0c 94 2e 06 	jmp	0xc5c	; 0xc5c <__epilogue_restores__>

000007d8 <calloc>:
 7d8:	0f 93       	push	r16
 7da:	1f 93       	push	r17
 7dc:	cf 93       	push	r28
 7de:	df 93       	push	r29
 7e0:	86 9f       	mul	r24, r22
 7e2:	80 01       	movw	r16, r0
 7e4:	87 9f       	mul	r24, r23
 7e6:	10 0d       	add	r17, r0
 7e8:	96 9f       	mul	r25, r22
 7ea:	10 0d       	add	r17, r0
 7ec:	11 24       	eor	r1, r1
 7ee:	c8 01       	movw	r24, r16
 7f0:	0e 94 08 04 	call	0x810	; 0x810 <malloc>
 7f4:	ec 01       	movw	r28, r24
 7f6:	00 97       	sbiw	r24, 0x00	; 0
 7f8:	29 f0       	breq	.+10     	; 0x804 <calloc+0x2c>
 7fa:	a8 01       	movw	r20, r16
 7fc:	60 e0       	ldi	r22, 0x00	; 0
 7fe:	70 e0       	ldi	r23, 0x00	; 0
 800:	0e 94 34 05 	call	0xa68	; 0xa68 <memset>
 804:	ce 01       	movw	r24, r28
 806:	df 91       	pop	r29
 808:	cf 91       	pop	r28
 80a:	1f 91       	pop	r17
 80c:	0f 91       	pop	r16
 80e:	08 95       	ret

00000810 <malloc>:
 810:	0f 93       	push	r16
 812:	1f 93       	push	r17
 814:	cf 93       	push	r28
 816:	df 93       	push	r29
 818:	82 30       	cpi	r24, 0x02	; 2
 81a:	91 05       	cpc	r25, r1
 81c:	10 f4       	brcc	.+4      	; 0x822 <malloc+0x12>
 81e:	82 e0       	ldi	r24, 0x02	; 2
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <__flp>
 826:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <__flp+0x1>
 82a:	20 e0       	ldi	r18, 0x00	; 0
 82c:	30 e0       	ldi	r19, 0x00	; 0
 82e:	a0 e0       	ldi	r26, 0x00	; 0
 830:	b0 e0       	ldi	r27, 0x00	; 0
 832:	30 97       	sbiw	r30, 0x00	; 0
 834:	19 f1       	breq	.+70     	; 0x87c <malloc+0x6c>
 836:	40 81       	ld	r20, Z
 838:	51 81       	ldd	r21, Z+1	; 0x01
 83a:	02 81       	ldd	r16, Z+2	; 0x02
 83c:	13 81       	ldd	r17, Z+3	; 0x03
 83e:	48 17       	cp	r20, r24
 840:	59 07       	cpc	r21, r25
 842:	c8 f0       	brcs	.+50     	; 0x876 <malloc+0x66>
 844:	84 17       	cp	r24, r20
 846:	95 07       	cpc	r25, r21
 848:	69 f4       	brne	.+26     	; 0x864 <malloc+0x54>
 84a:	10 97       	sbiw	r26, 0x00	; 0
 84c:	31 f0       	breq	.+12     	; 0x85a <malloc+0x4a>
 84e:	12 96       	adiw	r26, 0x02	; 2
 850:	0c 93       	st	X, r16
 852:	12 97       	sbiw	r26, 0x02	; 2
 854:	13 96       	adiw	r26, 0x03	; 3
 856:	1c 93       	st	X, r17
 858:	27 c0       	rjmp	.+78     	; 0x8a8 <malloc+0x98>
 85a:	00 93 c8 01 	sts	0x01C8, r16	; 0x8001c8 <__flp>
 85e:	10 93 c9 01 	sts	0x01C9, r17	; 0x8001c9 <__flp+0x1>
 862:	22 c0       	rjmp	.+68     	; 0x8a8 <malloc+0x98>
 864:	21 15       	cp	r18, r1
 866:	31 05       	cpc	r19, r1
 868:	19 f0       	breq	.+6      	; 0x870 <malloc+0x60>
 86a:	42 17       	cp	r20, r18
 86c:	53 07       	cpc	r21, r19
 86e:	18 f4       	brcc	.+6      	; 0x876 <malloc+0x66>
 870:	9a 01       	movw	r18, r20
 872:	bd 01       	movw	r22, r26
 874:	ef 01       	movw	r28, r30
 876:	df 01       	movw	r26, r30
 878:	f8 01       	movw	r30, r16
 87a:	db cf       	rjmp	.-74     	; 0x832 <malloc+0x22>
 87c:	21 15       	cp	r18, r1
 87e:	31 05       	cpc	r19, r1
 880:	f9 f0       	breq	.+62     	; 0x8c0 <malloc+0xb0>
 882:	28 1b       	sub	r18, r24
 884:	39 0b       	sbc	r19, r25
 886:	24 30       	cpi	r18, 0x04	; 4
 888:	31 05       	cpc	r19, r1
 88a:	80 f4       	brcc	.+32     	; 0x8ac <malloc+0x9c>
 88c:	8a 81       	ldd	r24, Y+2	; 0x02
 88e:	9b 81       	ldd	r25, Y+3	; 0x03
 890:	61 15       	cp	r22, r1
 892:	71 05       	cpc	r23, r1
 894:	21 f0       	breq	.+8      	; 0x89e <malloc+0x8e>
 896:	fb 01       	movw	r30, r22
 898:	93 83       	std	Z+3, r25	; 0x03
 89a:	82 83       	std	Z+2, r24	; 0x02
 89c:	04 c0       	rjmp	.+8      	; 0x8a6 <malloc+0x96>
 89e:	90 93 c9 01 	sts	0x01C9, r25	; 0x8001c9 <__flp+0x1>
 8a2:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <__flp>
 8a6:	fe 01       	movw	r30, r28
 8a8:	32 96       	adiw	r30, 0x02	; 2
 8aa:	44 c0       	rjmp	.+136    	; 0x934 <malloc+0x124>
 8ac:	fe 01       	movw	r30, r28
 8ae:	e2 0f       	add	r30, r18
 8b0:	f3 1f       	adc	r31, r19
 8b2:	81 93       	st	Z+, r24
 8b4:	91 93       	st	Z+, r25
 8b6:	22 50       	subi	r18, 0x02	; 2
 8b8:	31 09       	sbc	r19, r1
 8ba:	39 83       	std	Y+1, r19	; 0x01
 8bc:	28 83       	st	Y, r18
 8be:	3a c0       	rjmp	.+116    	; 0x934 <malloc+0x124>
 8c0:	20 91 c6 01 	lds	r18, 0x01C6	; 0x8001c6 <__brkval>
 8c4:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <__brkval+0x1>
 8c8:	23 2b       	or	r18, r19
 8ca:	41 f4       	brne	.+16     	; 0x8dc <malloc+0xcc>
 8cc:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 8d0:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 8d4:	30 93 c7 01 	sts	0x01C7, r19	; 0x8001c7 <__brkval+0x1>
 8d8:	20 93 c6 01 	sts	0x01C6, r18	; 0x8001c6 <__brkval>
 8dc:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 8e0:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 8e4:	21 15       	cp	r18, r1
 8e6:	31 05       	cpc	r19, r1
 8e8:	41 f4       	brne	.+16     	; 0x8fa <malloc+0xea>
 8ea:	2d b7       	in	r18, 0x3d	; 61
 8ec:	3e b7       	in	r19, 0x3e	; 62
 8ee:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 8f2:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 8f6:	24 1b       	sub	r18, r20
 8f8:	35 0b       	sbc	r19, r21
 8fa:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <__brkval>
 8fe:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <__brkval+0x1>
 902:	e2 17       	cp	r30, r18
 904:	f3 07       	cpc	r31, r19
 906:	a0 f4       	brcc	.+40     	; 0x930 <malloc+0x120>
 908:	2e 1b       	sub	r18, r30
 90a:	3f 0b       	sbc	r19, r31
 90c:	28 17       	cp	r18, r24
 90e:	39 07       	cpc	r19, r25
 910:	78 f0       	brcs	.+30     	; 0x930 <malloc+0x120>
 912:	ac 01       	movw	r20, r24
 914:	4e 5f       	subi	r20, 0xFE	; 254
 916:	5f 4f       	sbci	r21, 0xFF	; 255
 918:	24 17       	cp	r18, r20
 91a:	35 07       	cpc	r19, r21
 91c:	48 f0       	brcs	.+18     	; 0x930 <malloc+0x120>
 91e:	4e 0f       	add	r20, r30
 920:	5f 1f       	adc	r21, r31
 922:	50 93 c7 01 	sts	0x01C7, r21	; 0x8001c7 <__brkval+0x1>
 926:	40 93 c6 01 	sts	0x01C6, r20	; 0x8001c6 <__brkval>
 92a:	81 93       	st	Z+, r24
 92c:	91 93       	st	Z+, r25
 92e:	02 c0       	rjmp	.+4      	; 0x934 <malloc+0x124>
 930:	e0 e0       	ldi	r30, 0x00	; 0
 932:	f0 e0       	ldi	r31, 0x00	; 0
 934:	cf 01       	movw	r24, r30
 936:	df 91       	pop	r29
 938:	cf 91       	pop	r28
 93a:	1f 91       	pop	r17
 93c:	0f 91       	pop	r16
 93e:	08 95       	ret

00000940 <free>:
 940:	cf 93       	push	r28
 942:	df 93       	push	r29
 944:	00 97       	sbiw	r24, 0x00	; 0
 946:	09 f4       	brne	.+2      	; 0x94a <free+0xa>
 948:	81 c0       	rjmp	.+258    	; 0xa4c <free+0x10c>
 94a:	fc 01       	movw	r30, r24
 94c:	32 97       	sbiw	r30, 0x02	; 2
 94e:	13 82       	std	Z+3, r1	; 0x03
 950:	12 82       	std	Z+2, r1	; 0x02
 952:	a0 91 c8 01 	lds	r26, 0x01C8	; 0x8001c8 <__flp>
 956:	b0 91 c9 01 	lds	r27, 0x01C9	; 0x8001c9 <__flp+0x1>
 95a:	10 97       	sbiw	r26, 0x00	; 0
 95c:	81 f4       	brne	.+32     	; 0x97e <free+0x3e>
 95e:	20 81       	ld	r18, Z
 960:	31 81       	ldd	r19, Z+1	; 0x01
 962:	82 0f       	add	r24, r18
 964:	93 1f       	adc	r25, r19
 966:	20 91 c6 01 	lds	r18, 0x01C6	; 0x8001c6 <__brkval>
 96a:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <__brkval+0x1>
 96e:	28 17       	cp	r18, r24
 970:	39 07       	cpc	r19, r25
 972:	51 f5       	brne	.+84     	; 0x9c8 <free+0x88>
 974:	f0 93 c7 01 	sts	0x01C7, r31	; 0x8001c7 <__brkval+0x1>
 978:	e0 93 c6 01 	sts	0x01C6, r30	; 0x8001c6 <__brkval>
 97c:	67 c0       	rjmp	.+206    	; 0xa4c <free+0x10c>
 97e:	ed 01       	movw	r28, r26
 980:	20 e0       	ldi	r18, 0x00	; 0
 982:	30 e0       	ldi	r19, 0x00	; 0
 984:	ce 17       	cp	r28, r30
 986:	df 07       	cpc	r29, r31
 988:	40 f4       	brcc	.+16     	; 0x99a <free+0x5a>
 98a:	4a 81       	ldd	r20, Y+2	; 0x02
 98c:	5b 81       	ldd	r21, Y+3	; 0x03
 98e:	9e 01       	movw	r18, r28
 990:	41 15       	cp	r20, r1
 992:	51 05       	cpc	r21, r1
 994:	f1 f0       	breq	.+60     	; 0x9d2 <free+0x92>
 996:	ea 01       	movw	r28, r20
 998:	f5 cf       	rjmp	.-22     	; 0x984 <free+0x44>
 99a:	d3 83       	std	Z+3, r29	; 0x03
 99c:	c2 83       	std	Z+2, r28	; 0x02
 99e:	40 81       	ld	r20, Z
 9a0:	51 81       	ldd	r21, Z+1	; 0x01
 9a2:	84 0f       	add	r24, r20
 9a4:	95 1f       	adc	r25, r21
 9a6:	c8 17       	cp	r28, r24
 9a8:	d9 07       	cpc	r29, r25
 9aa:	59 f4       	brne	.+22     	; 0x9c2 <free+0x82>
 9ac:	88 81       	ld	r24, Y
 9ae:	99 81       	ldd	r25, Y+1	; 0x01
 9b0:	84 0f       	add	r24, r20
 9b2:	95 1f       	adc	r25, r21
 9b4:	02 96       	adiw	r24, 0x02	; 2
 9b6:	91 83       	std	Z+1, r25	; 0x01
 9b8:	80 83       	st	Z, r24
 9ba:	8a 81       	ldd	r24, Y+2	; 0x02
 9bc:	9b 81       	ldd	r25, Y+3	; 0x03
 9be:	93 83       	std	Z+3, r25	; 0x03
 9c0:	82 83       	std	Z+2, r24	; 0x02
 9c2:	21 15       	cp	r18, r1
 9c4:	31 05       	cpc	r19, r1
 9c6:	29 f4       	brne	.+10     	; 0x9d2 <free+0x92>
 9c8:	f0 93 c9 01 	sts	0x01C9, r31	; 0x8001c9 <__flp+0x1>
 9cc:	e0 93 c8 01 	sts	0x01C8, r30	; 0x8001c8 <__flp>
 9d0:	3d c0       	rjmp	.+122    	; 0xa4c <free+0x10c>
 9d2:	e9 01       	movw	r28, r18
 9d4:	fb 83       	std	Y+3, r31	; 0x03
 9d6:	ea 83       	std	Y+2, r30	; 0x02
 9d8:	49 91       	ld	r20, Y+
 9da:	59 91       	ld	r21, Y+
 9dc:	c4 0f       	add	r28, r20
 9de:	d5 1f       	adc	r29, r21
 9e0:	ec 17       	cp	r30, r28
 9e2:	fd 07       	cpc	r31, r29
 9e4:	61 f4       	brne	.+24     	; 0x9fe <free+0xbe>
 9e6:	80 81       	ld	r24, Z
 9e8:	91 81       	ldd	r25, Z+1	; 0x01
 9ea:	84 0f       	add	r24, r20
 9ec:	95 1f       	adc	r25, r21
 9ee:	02 96       	adiw	r24, 0x02	; 2
 9f0:	e9 01       	movw	r28, r18
 9f2:	99 83       	std	Y+1, r25	; 0x01
 9f4:	88 83       	st	Y, r24
 9f6:	82 81       	ldd	r24, Z+2	; 0x02
 9f8:	93 81       	ldd	r25, Z+3	; 0x03
 9fa:	9b 83       	std	Y+3, r25	; 0x03
 9fc:	8a 83       	std	Y+2, r24	; 0x02
 9fe:	e0 e0       	ldi	r30, 0x00	; 0
 a00:	f0 e0       	ldi	r31, 0x00	; 0
 a02:	12 96       	adiw	r26, 0x02	; 2
 a04:	8d 91       	ld	r24, X+
 a06:	9c 91       	ld	r25, X
 a08:	13 97       	sbiw	r26, 0x03	; 3
 a0a:	00 97       	sbiw	r24, 0x00	; 0
 a0c:	19 f0       	breq	.+6      	; 0xa14 <free+0xd4>
 a0e:	fd 01       	movw	r30, r26
 a10:	dc 01       	movw	r26, r24
 a12:	f7 cf       	rjmp	.-18     	; 0xa02 <free+0xc2>
 a14:	8d 91       	ld	r24, X+
 a16:	9c 91       	ld	r25, X
 a18:	11 97       	sbiw	r26, 0x01	; 1
 a1a:	9d 01       	movw	r18, r26
 a1c:	2e 5f       	subi	r18, 0xFE	; 254
 a1e:	3f 4f       	sbci	r19, 0xFF	; 255
 a20:	82 0f       	add	r24, r18
 a22:	93 1f       	adc	r25, r19
 a24:	20 91 c6 01 	lds	r18, 0x01C6	; 0x8001c6 <__brkval>
 a28:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <__brkval+0x1>
 a2c:	28 17       	cp	r18, r24
 a2e:	39 07       	cpc	r19, r25
 a30:	69 f4       	brne	.+26     	; 0xa4c <free+0x10c>
 a32:	30 97       	sbiw	r30, 0x00	; 0
 a34:	29 f4       	brne	.+10     	; 0xa40 <free+0x100>
 a36:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <__flp+0x1>
 a3a:	10 92 c8 01 	sts	0x01C8, r1	; 0x8001c8 <__flp>
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <free+0x104>
 a40:	13 82       	std	Z+3, r1	; 0x03
 a42:	12 82       	std	Z+2, r1	; 0x02
 a44:	b0 93 c7 01 	sts	0x01C7, r27	; 0x8001c7 <__brkval+0x1>
 a48:	a0 93 c6 01 	sts	0x01C6, r26	; 0x8001c6 <__brkval>
 a4c:	df 91       	pop	r29
 a4e:	cf 91       	pop	r28
 a50:	08 95       	ret

00000a52 <strnlen_P>:
 a52:	fc 01       	movw	r30, r24
 a54:	05 90       	lpm	r0, Z+
 a56:	61 50       	subi	r22, 0x01	; 1
 a58:	70 40       	sbci	r23, 0x00	; 0
 a5a:	01 10       	cpse	r0, r1
 a5c:	d8 f7       	brcc	.-10     	; 0xa54 <strnlen_P+0x2>
 a5e:	80 95       	com	r24
 a60:	90 95       	com	r25
 a62:	8e 0f       	add	r24, r30
 a64:	9f 1f       	adc	r25, r31
 a66:	08 95       	ret

00000a68 <memset>:
 a68:	dc 01       	movw	r26, r24
 a6a:	01 c0       	rjmp	.+2      	; 0xa6e <memset+0x6>
 a6c:	6d 93       	st	X+, r22
 a6e:	41 50       	subi	r20, 0x01	; 1
 a70:	50 40       	sbci	r21, 0x00	; 0
 a72:	e0 f7       	brcc	.-8      	; 0xa6c <memset+0x4>
 a74:	08 95       	ret

00000a76 <strnlen>:
 a76:	fc 01       	movw	r30, r24
 a78:	61 50       	subi	r22, 0x01	; 1
 a7a:	70 40       	sbci	r23, 0x00	; 0
 a7c:	01 90       	ld	r0, Z+
 a7e:	01 10       	cpse	r0, r1
 a80:	d8 f7       	brcc	.-10     	; 0xa78 <strnlen+0x2>
 a82:	80 95       	com	r24
 a84:	90 95       	com	r25
 a86:	8e 0f       	add	r24, r30
 a88:	9f 1f       	adc	r25, r31
 a8a:	08 95       	ret

00000a8c <fputc>:
 a8c:	0f 93       	push	r16
 a8e:	1f 93       	push	r17
 a90:	cf 93       	push	r28
 a92:	df 93       	push	r29
 a94:	fb 01       	movw	r30, r22
 a96:	23 81       	ldd	r18, Z+3	; 0x03
 a98:	21 fd       	sbrc	r18, 1
 a9a:	03 c0       	rjmp	.+6      	; 0xaa2 <fputc+0x16>
 a9c:	8f ef       	ldi	r24, 0xFF	; 255
 a9e:	9f ef       	ldi	r25, 0xFF	; 255
 aa0:	2c c0       	rjmp	.+88     	; 0xafa <fputc+0x6e>
 aa2:	22 ff       	sbrs	r18, 2
 aa4:	16 c0       	rjmp	.+44     	; 0xad2 <fputc+0x46>
 aa6:	46 81       	ldd	r20, Z+6	; 0x06
 aa8:	57 81       	ldd	r21, Z+7	; 0x07
 aaa:	24 81       	ldd	r18, Z+4	; 0x04
 aac:	35 81       	ldd	r19, Z+5	; 0x05
 aae:	42 17       	cp	r20, r18
 ab0:	53 07       	cpc	r21, r19
 ab2:	44 f4       	brge	.+16     	; 0xac4 <fputc+0x38>
 ab4:	a0 81       	ld	r26, Z
 ab6:	b1 81       	ldd	r27, Z+1	; 0x01
 ab8:	9d 01       	movw	r18, r26
 aba:	2f 5f       	subi	r18, 0xFF	; 255
 abc:	3f 4f       	sbci	r19, 0xFF	; 255
 abe:	31 83       	std	Z+1, r19	; 0x01
 ac0:	20 83       	st	Z, r18
 ac2:	8c 93       	st	X, r24
 ac4:	26 81       	ldd	r18, Z+6	; 0x06
 ac6:	37 81       	ldd	r19, Z+7	; 0x07
 ac8:	2f 5f       	subi	r18, 0xFF	; 255
 aca:	3f 4f       	sbci	r19, 0xFF	; 255
 acc:	37 83       	std	Z+7, r19	; 0x07
 ace:	26 83       	std	Z+6, r18	; 0x06
 ad0:	14 c0       	rjmp	.+40     	; 0xafa <fputc+0x6e>
 ad2:	8b 01       	movw	r16, r22
 ad4:	ec 01       	movw	r28, r24
 ad6:	fb 01       	movw	r30, r22
 ad8:	00 84       	ldd	r0, Z+8	; 0x08
 ada:	f1 85       	ldd	r31, Z+9	; 0x09
 adc:	e0 2d       	mov	r30, r0
 ade:	09 95       	icall
 ae0:	89 2b       	or	r24, r25
 ae2:	e1 f6       	brne	.-72     	; 0xa9c <fputc+0x10>
 ae4:	d8 01       	movw	r26, r16
 ae6:	16 96       	adiw	r26, 0x06	; 6
 ae8:	8d 91       	ld	r24, X+
 aea:	9c 91       	ld	r25, X
 aec:	17 97       	sbiw	r26, 0x07	; 7
 aee:	01 96       	adiw	r24, 0x01	; 1
 af0:	17 96       	adiw	r26, 0x07	; 7
 af2:	9c 93       	st	X, r25
 af4:	8e 93       	st	-X, r24
 af6:	16 97       	sbiw	r26, 0x06	; 6
 af8:	ce 01       	movw	r24, r28
 afa:	df 91       	pop	r29
 afc:	cf 91       	pop	r28
 afe:	1f 91       	pop	r17
 b00:	0f 91       	pop	r16
 b02:	08 95       	ret

00000b04 <__ultoa_invert>:
 b04:	fa 01       	movw	r30, r20
 b06:	aa 27       	eor	r26, r26
 b08:	28 30       	cpi	r18, 0x08	; 8
 b0a:	51 f1       	breq	.+84     	; 0xb60 <__ultoa_invert+0x5c>
 b0c:	20 31       	cpi	r18, 0x10	; 16
 b0e:	81 f1       	breq	.+96     	; 0xb70 <__ultoa_invert+0x6c>
 b10:	e8 94       	clt
 b12:	6f 93       	push	r22
 b14:	6e 7f       	andi	r22, 0xFE	; 254
 b16:	6e 5f       	subi	r22, 0xFE	; 254
 b18:	7f 4f       	sbci	r23, 0xFF	; 255
 b1a:	8f 4f       	sbci	r24, 0xFF	; 255
 b1c:	9f 4f       	sbci	r25, 0xFF	; 255
 b1e:	af 4f       	sbci	r26, 0xFF	; 255
 b20:	b1 e0       	ldi	r27, 0x01	; 1
 b22:	3e d0       	rcall	.+124    	; 0xba0 <__ultoa_invert+0x9c>
 b24:	b4 e0       	ldi	r27, 0x04	; 4
 b26:	3c d0       	rcall	.+120    	; 0xba0 <__ultoa_invert+0x9c>
 b28:	67 0f       	add	r22, r23
 b2a:	78 1f       	adc	r23, r24
 b2c:	89 1f       	adc	r24, r25
 b2e:	9a 1f       	adc	r25, r26
 b30:	a1 1d       	adc	r26, r1
 b32:	68 0f       	add	r22, r24
 b34:	79 1f       	adc	r23, r25
 b36:	8a 1f       	adc	r24, r26
 b38:	91 1d       	adc	r25, r1
 b3a:	a1 1d       	adc	r26, r1
 b3c:	6a 0f       	add	r22, r26
 b3e:	71 1d       	adc	r23, r1
 b40:	81 1d       	adc	r24, r1
 b42:	91 1d       	adc	r25, r1
 b44:	a1 1d       	adc	r26, r1
 b46:	20 d0       	rcall	.+64     	; 0xb88 <__ultoa_invert+0x84>
 b48:	09 f4       	brne	.+2      	; 0xb4c <__ultoa_invert+0x48>
 b4a:	68 94       	set
 b4c:	3f 91       	pop	r19
 b4e:	2a e0       	ldi	r18, 0x0A	; 10
 b50:	26 9f       	mul	r18, r22
 b52:	11 24       	eor	r1, r1
 b54:	30 19       	sub	r19, r0
 b56:	30 5d       	subi	r19, 0xD0	; 208
 b58:	31 93       	st	Z+, r19
 b5a:	de f6       	brtc	.-74     	; 0xb12 <__ultoa_invert+0xe>
 b5c:	cf 01       	movw	r24, r30
 b5e:	08 95       	ret
 b60:	46 2f       	mov	r20, r22
 b62:	47 70       	andi	r20, 0x07	; 7
 b64:	40 5d       	subi	r20, 0xD0	; 208
 b66:	41 93       	st	Z+, r20
 b68:	b3 e0       	ldi	r27, 0x03	; 3
 b6a:	0f d0       	rcall	.+30     	; 0xb8a <__ultoa_invert+0x86>
 b6c:	c9 f7       	brne	.-14     	; 0xb60 <__ultoa_invert+0x5c>
 b6e:	f6 cf       	rjmp	.-20     	; 0xb5c <__ultoa_invert+0x58>
 b70:	46 2f       	mov	r20, r22
 b72:	4f 70       	andi	r20, 0x0F	; 15
 b74:	40 5d       	subi	r20, 0xD0	; 208
 b76:	4a 33       	cpi	r20, 0x3A	; 58
 b78:	18 f0       	brcs	.+6      	; 0xb80 <__ultoa_invert+0x7c>
 b7a:	49 5d       	subi	r20, 0xD9	; 217
 b7c:	31 fd       	sbrc	r19, 1
 b7e:	40 52       	subi	r20, 0x20	; 32
 b80:	41 93       	st	Z+, r20
 b82:	02 d0       	rcall	.+4      	; 0xb88 <__ultoa_invert+0x84>
 b84:	a9 f7       	brne	.-22     	; 0xb70 <__ultoa_invert+0x6c>
 b86:	ea cf       	rjmp	.-44     	; 0xb5c <__ultoa_invert+0x58>
 b88:	b4 e0       	ldi	r27, 0x04	; 4
 b8a:	a6 95       	lsr	r26
 b8c:	97 95       	ror	r25
 b8e:	87 95       	ror	r24
 b90:	77 95       	ror	r23
 b92:	67 95       	ror	r22
 b94:	ba 95       	dec	r27
 b96:	c9 f7       	brne	.-14     	; 0xb8a <__ultoa_invert+0x86>
 b98:	00 97       	sbiw	r24, 0x00	; 0
 b9a:	61 05       	cpc	r22, r1
 b9c:	71 05       	cpc	r23, r1
 b9e:	08 95       	ret
 ba0:	9b 01       	movw	r18, r22
 ba2:	ac 01       	movw	r20, r24
 ba4:	0a 2e       	mov	r0, r26
 ba6:	06 94       	lsr	r0
 ba8:	57 95       	ror	r21
 baa:	47 95       	ror	r20
 bac:	37 95       	ror	r19
 bae:	27 95       	ror	r18
 bb0:	ba 95       	dec	r27
 bb2:	c9 f7       	brne	.-14     	; 0xba6 <__ultoa_invert+0xa2>
 bb4:	62 0f       	add	r22, r18
 bb6:	73 1f       	adc	r23, r19
 bb8:	84 1f       	adc	r24, r20
 bba:	95 1f       	adc	r25, r21
 bbc:	a0 1d       	adc	r26, r0
 bbe:	08 95       	ret

00000bc0 <__divmodsi4>:
 bc0:	05 2e       	mov	r0, r21
 bc2:	97 fb       	bst	r25, 7
 bc4:	1e f4       	brtc	.+6      	; 0xbcc <__divmodsi4+0xc>
 bc6:	00 94       	com	r0
 bc8:	0e 94 f7 05 	call	0xbee	; 0xbee <__negsi2>
 bcc:	57 fd       	sbrc	r21, 7
 bce:	07 d0       	rcall	.+14     	; 0xbde <__divmodsi4_neg2>
 bd0:	0e 94 49 06 	call	0xc92	; 0xc92 <__udivmodsi4>
 bd4:	07 fc       	sbrc	r0, 7
 bd6:	03 d0       	rcall	.+6      	; 0xbde <__divmodsi4_neg2>
 bd8:	4e f4       	brtc	.+18     	; 0xbec <__divmodsi4_exit>
 bda:	0c 94 f7 05 	jmp	0xbee	; 0xbee <__negsi2>

00000bde <__divmodsi4_neg2>:
 bde:	50 95       	com	r21
 be0:	40 95       	com	r20
 be2:	30 95       	com	r19
 be4:	21 95       	neg	r18
 be6:	3f 4f       	sbci	r19, 0xFF	; 255
 be8:	4f 4f       	sbci	r20, 0xFF	; 255
 bea:	5f 4f       	sbci	r21, 0xFF	; 255

00000bec <__divmodsi4_exit>:
 bec:	08 95       	ret

00000bee <__negsi2>:
 bee:	90 95       	com	r25
 bf0:	80 95       	com	r24
 bf2:	70 95       	com	r23
 bf4:	61 95       	neg	r22
 bf6:	7f 4f       	sbci	r23, 0xFF	; 255
 bf8:	8f 4f       	sbci	r24, 0xFF	; 255
 bfa:	9f 4f       	sbci	r25, 0xFF	; 255
 bfc:	08 95       	ret

00000bfe <__muluhisi3>:
 bfe:	0e 94 3f 01 	call	0x27e	; 0x27e <__umulhisi3>
 c02:	a5 9f       	mul	r26, r21
 c04:	90 0d       	add	r25, r0
 c06:	b4 9f       	mul	r27, r20
 c08:	90 0d       	add	r25, r0
 c0a:	a4 9f       	mul	r26, r20
 c0c:	80 0d       	add	r24, r0
 c0e:	91 1d       	adc	r25, r1
 c10:	11 24       	eor	r1, r1
 c12:	08 95       	ret

00000c14 <__mulshisi3>:
 c14:	b7 ff       	sbrs	r27, 7
 c16:	0c 94 ff 05 	jmp	0xbfe	; 0xbfe <__muluhisi3>

00000c1a <__mulohisi3>:
 c1a:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__muluhisi3>
 c1e:	82 1b       	sub	r24, r18
 c20:	93 0b       	sbc	r25, r19
 c22:	08 95       	ret

00000c24 <__prologue_saves__>:
 c24:	2f 92       	push	r2
 c26:	3f 92       	push	r3
 c28:	4f 92       	push	r4
 c2a:	5f 92       	push	r5
 c2c:	6f 92       	push	r6
 c2e:	7f 92       	push	r7
 c30:	8f 92       	push	r8
 c32:	9f 92       	push	r9
 c34:	af 92       	push	r10
 c36:	bf 92       	push	r11
 c38:	cf 92       	push	r12
 c3a:	df 92       	push	r13
 c3c:	ef 92       	push	r14
 c3e:	ff 92       	push	r15
 c40:	0f 93       	push	r16
 c42:	1f 93       	push	r17
 c44:	cf 93       	push	r28
 c46:	df 93       	push	r29
 c48:	cd b7       	in	r28, 0x3d	; 61
 c4a:	de b7       	in	r29, 0x3e	; 62
 c4c:	ca 1b       	sub	r28, r26
 c4e:	db 0b       	sbc	r29, r27
 c50:	0f b6       	in	r0, 0x3f	; 63
 c52:	f8 94       	cli
 c54:	de bf       	out	0x3e, r29	; 62
 c56:	0f be       	out	0x3f, r0	; 63
 c58:	cd bf       	out	0x3d, r28	; 61
 c5a:	09 94       	ijmp

00000c5c <__epilogue_restores__>:
 c5c:	2a 88       	ldd	r2, Y+18	; 0x12
 c5e:	39 88       	ldd	r3, Y+17	; 0x11
 c60:	48 88       	ldd	r4, Y+16	; 0x10
 c62:	5f 84       	ldd	r5, Y+15	; 0x0f
 c64:	6e 84       	ldd	r6, Y+14	; 0x0e
 c66:	7d 84       	ldd	r7, Y+13	; 0x0d
 c68:	8c 84       	ldd	r8, Y+12	; 0x0c
 c6a:	9b 84       	ldd	r9, Y+11	; 0x0b
 c6c:	aa 84       	ldd	r10, Y+10	; 0x0a
 c6e:	b9 84       	ldd	r11, Y+9	; 0x09
 c70:	c8 84       	ldd	r12, Y+8	; 0x08
 c72:	df 80       	ldd	r13, Y+7	; 0x07
 c74:	ee 80       	ldd	r14, Y+6	; 0x06
 c76:	fd 80       	ldd	r15, Y+5	; 0x05
 c78:	0c 81       	ldd	r16, Y+4	; 0x04
 c7a:	1b 81       	ldd	r17, Y+3	; 0x03
 c7c:	aa 81       	ldd	r26, Y+2	; 0x02
 c7e:	b9 81       	ldd	r27, Y+1	; 0x01
 c80:	ce 0f       	add	r28, r30
 c82:	d1 1d       	adc	r29, r1
 c84:	0f b6       	in	r0, 0x3f	; 63
 c86:	f8 94       	cli
 c88:	de bf       	out	0x3e, r29	; 62
 c8a:	0f be       	out	0x3f, r0	; 63
 c8c:	cd bf       	out	0x3d, r28	; 61
 c8e:	ed 01       	movw	r28, r26
 c90:	08 95       	ret

00000c92 <__udivmodsi4>:
 c92:	a1 e2       	ldi	r26, 0x21	; 33
 c94:	1a 2e       	mov	r1, r26
 c96:	aa 1b       	sub	r26, r26
 c98:	bb 1b       	sub	r27, r27
 c9a:	fd 01       	movw	r30, r26
 c9c:	0d c0       	rjmp	.+26     	; 0xcb8 <__udivmodsi4_ep>

00000c9e <__udivmodsi4_loop>:
 c9e:	aa 1f       	adc	r26, r26
 ca0:	bb 1f       	adc	r27, r27
 ca2:	ee 1f       	adc	r30, r30
 ca4:	ff 1f       	adc	r31, r31
 ca6:	a2 17       	cp	r26, r18
 ca8:	b3 07       	cpc	r27, r19
 caa:	e4 07       	cpc	r30, r20
 cac:	f5 07       	cpc	r31, r21
 cae:	20 f0       	brcs	.+8      	; 0xcb8 <__udivmodsi4_ep>
 cb0:	a2 1b       	sub	r26, r18
 cb2:	b3 0b       	sbc	r27, r19
 cb4:	e4 0b       	sbc	r30, r20
 cb6:	f5 0b       	sbc	r31, r21

00000cb8 <__udivmodsi4_ep>:
 cb8:	66 1f       	adc	r22, r22
 cba:	77 1f       	adc	r23, r23
 cbc:	88 1f       	adc	r24, r24
 cbe:	99 1f       	adc	r25, r25
 cc0:	1a 94       	dec	r1
 cc2:	69 f7       	brne	.-38     	; 0xc9e <__udivmodsi4_loop>
 cc4:	60 95       	com	r22
 cc6:	70 95       	com	r23
 cc8:	80 95       	com	r24
 cca:	90 95       	com	r25
 ccc:	9b 01       	movw	r18, r22
 cce:	ac 01       	movw	r20, r24
 cd0:	bd 01       	movw	r22, r26
 cd2:	cf 01       	movw	r24, r30
 cd4:	08 95       	ret

00000cd6 <_exit>:
 cd6:	f8 94       	cli

00000cd8 <__stop_program>:
 cd8:	ff cf       	rjmp	.-2      	; 0xcd8 <__stop_program>
